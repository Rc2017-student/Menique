@page "/muebleria/nuevo"
@page "/muebleria/editar/{id:int}"
@rendermode InteractiveServer
@inject NavigationManager navegador
@inject RepositorioCompras repositorio

<h2>@mensaje Carga de datos</h2>

<EditForm Model="compras" FormName="Fcompras" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="row mb-3">
        <label for="NombreC" class="col-sm-2 col-form-label">Tipo de Mueble</label>
        <div class="col-sm-10">
            <InputText id="NombreC" class="form-control" @bind-Value="compras.NombreC" />
            <ValidationMessage For="() => compras.NombreC" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="PrecioC" class="col-sm-2 col-form-label">Precio</label>
        <div class="col-sm-10">
            <InputNumber id="PrecioC" class="form-control" @bind-Value="compras.PrecioC" />
            <ValidationMessage For="() => compras.PrecioC" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="CantidadC" class="col-sm-2 col-form-label">Cantidad</label>
        <div class="col-sm-10">
            <InputNumber id="CantidadC" class="form-control" @bind-Value="compras.CantidadC" />
            <ValidationMessage For="() => compras.CantidadC" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="FechaC" class="col-sm-2 col-form-label">Fecha de compra</label>
        <div class="col-sm-10">
            <InputDate id="FechaC" class="form-control" @bind-Value="compras.FechaC" />
            <ValidationMessage For="() => compras.FechaC" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string mensaje = "";
    private Compras? compras = new();

    protected override async Task OnInitializedAsync()
    {

        if (Id != 0)
        {
            compras = await repositorio.Get(Id);
            mensaje = "Editar";
        }
        else
        {
            mensaje = "Nueva";
        }
    }

    private async Task Guardar()
    {
        if (Id != 0)
        {
            await repositorio.Update(Id, compras);
        }
        else
        {
            await repositorio.Add(compras!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        navegador.NavigateTo("/muebleria");
    }
}

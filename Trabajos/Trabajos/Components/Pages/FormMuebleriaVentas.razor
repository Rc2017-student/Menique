@page "/muebleriaVentas/nuevo"
@page "/muebleriaVentas/editar/{id:int}"
@rendermode InteractiveServer
@inject NavigationManager navegador
@inject RepositorioVentas repositorio
@inject RepositorioCompras repositorioC
@inject RepositorioEmpleados repositorioE

<h2>Carga de datos</h2>

<EditForm Model="ventas" FormName="Fventas" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />

    <div class="row mb-3">
        <label for="mueble" class="col-sm-2 col-form-label">Mueble</label>
        <div class="col-sm-10">
            <InputSelect id="mueble" class="form-control" @bind-Value="ventas.ComprasId">
                <option value="0">Seleccione un mueble</option>
                @foreach (Compras compra in Compras)
                {
                    <option value="@compra.IdProducto">@compra.NombreC</option>
                }
            </InputSelect>
            <ValidationMessage For="() => ventas.ComprasId" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="CantidadV" class="col-sm-2 col-form-label">Cantidad</label>
        <div class="col-sm-10">
            <InputSelect id="CantidadV" class="form-control" @bind-Value="ventas.CantidadV">
                <option value="0">Seleccione una cantidad</option>
                @if (ventas.ComprasId != 0)
                {
                    var productoSeleccionado = Compras.FirstOrDefault(c => c.IdProducto == ventas.ComprasId);
                    for (int i = 1; i <= productoSeleccionado.CantidadC; i++)
                    {
                        <option value="@i">@i</option>
                    }
                }
            </InputSelect>
            <ValidationMessage For="() => ventas.CantidadV" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="empleado" class="col-sm-2 col-form-label">Empleado</label>
        <div class="col-sm-10">
            <InputSelect id="empleado" class="form-control" @bind-Value="ventas.EmpleadosId">
                <option value="0">Seleccione un empleado</option>
                @foreach (Empleados empleado in Empleados)
                {
                    <option value="@empleado.IdEmpleado">@empleado.NombreE</option>
                }
            </InputSelect>
            <ValidationMessage For="() => ventas.EmpleadosId" />
        </div>
    </div>

    <div class="row mb-3">
        <label for="FechaC" class="col-sm-2 col-form-label">Fecha de venta</label>
        <div class="col-sm-10">
            <InputDate id="FechaV" class="form-control" @bind-Value="ventas.FechaV" />
            <ValidationMessage For="() => ventas.FechaV" />
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancelar" @onclick:preventDefault>Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string mensaje = "";
    private Ventas? ventas = new();
    private List<Empleados> Empleados = new();
    private List<Compras> Compras = new();

    protected override async Task OnInitializedAsync()
    {
        Empleados = await repositorioE.GetAll();
        Compras = await repositorioC.GetAll();
        if (Id != 0)
        {
            ventas = await repositorio.Get(Id);
            mensaje = "Editar";
        }
        else
        {
            mensaje = "Nueva";
        }
    }

    private async void Guardar()
    {
        if (Id != 0)
        {
            await repositorio.Update(Id, ventas);
        }
        else
        {
            await repositorio.Add(ventas!);
        }
        Cancelar();
    }

    private void Cancelar()
    {
        navegador.NavigateTo("/muebleriaVentas");
    }

}
